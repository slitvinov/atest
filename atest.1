.TH ATEST 1
.SH NAME
atest \- run atests
.SH SYNOPSIS
.B atest
[
.I file ...
]
.SH TUTORIAL
Lets create a test for a program
.IP
.EX
$ \&./example
.EE
.PP
it outputs '1 2 3' and you want to modify ./example and make sure the
output stay the same. Create a file with a test test/0
.IP
.EX
# cTEST: 0
\&./example  > example.out.txt
.EE
.PP
The lines after '# cTEST: 0' are executed as a script. The script
creates a file example.out.txt which contains a "magic" pattern
.I .out.
This pattern tells atest to consider this file as a reference output.
.IP
.EX
$ atest test/0
.EE
.PP
end of the output says:
.IP
.EX
atest: 0/0 test(s) passed
atest:    1 test(s) created
.EE
.PP

atest and stored a reference output to a directory test_data. To run a
test replace cTEST by TEST in test/0\ and run
.IP
.EX
$ atest test/0
.EE
.PP
It returns
.IP
.EX
atest: RUNNING: 0
atest: PASSED : 0
atest: 1/1 test(s) passed
.EE
.PP
Now if you "break" ./example and run
.IP
.EX
atest test/0
.EE
.PP
it get noticed.
.IP
.EX
atest: 0/1 test(s) passed
atest: failed tests:
atest:     0
.EE
.PP
.SH DESCRIPTION
A test consists of a header line and lines which are executed as a shell script. An empty line ends a script.
.IP
.EX
# TEST: name
<script>
<scirpt>
<script>

<not a script>
.EE
.PP
cTEST means "create" mode. In this mode the script updates the reference file\&.
.IP
.EX
# cTEST: name
.EE
.PP

nTEST is "numerical" comparison mode. In this mode every number in
the output is compared with the reference up to a tolerance
0.1. For a reference output '1 2 3'. A program which outputs
'1.01 2 3' passes a test and one which outputs '1.11 2 3'
does not.

.SH "ENVIRONMENT VARIABLES"
The following environment variables affect atest. ATEST_DIR a directory with reference values, ATEST_C if set regenerates all test.
.SH EXAMPLES
.IP
.EX
atest atest.examples.sh
.EE
.PP
Run tests in atest.examples.sh
.RE
.SH SOURCE
https://github.com/slitvinov/atest
